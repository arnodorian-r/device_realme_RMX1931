<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Copyright (c) 2009, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Auto-brightness sensor type string -->
    <string name="config_displayLightSensorType">"qti.sensor.wise_light"</string>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Light sensor event rate in milliseconds for automatic brightness control. -->
    <integer name="config_autoBrightnessLightSensorRate">300</integer>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">300.0%</fraction>

    <!-- Whether or not to skip the initial brightness ramps when the display transitions to
         STATE_ON. Setting this to true will skip the brightness ramp to the last stored active
         brightness value and will repeat for the following ramp if autobrightness is enabled. -->
    <bool name="config_skipScreenOnBrightnessRamp">true</bool>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)
         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux
         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).
         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>28</item>
        <item>47</item>
        <item>63</item>
        <item>86</item>
        <item>150</item>
        <item>220</item>
        <item>270</item>
        <item>360</item>
        <item>420</item>
        <item>510</item>
        <item>620</item>
        <item>1000</item>
        <item>2000</item>
        <item>3100</item>
        <item>3988</item>
        <item>5018</item>
        <item>6232</item>
        <item>7648</item>
        <item>9280</item>
        <item>11146</item>
        <item>13261</item>
        <item>15640</item>
        <item>18302</item>
        <item>21260</item>
        <item>24532</item>
        <item>28133</item>
        <item>32080</item>
        <item>36388</item>
        <item>41073</item>
        <item>46153</item>
        <item>51642</item>
        <item>63912</item>
        <item>78015</item>
        <item>94076</item>
        <item>112226</item>
        <item>132592</item>
        <item>155302</item>
        <item>180486</item>
        <item>208271</item>
        <item>223180</item>
        <item>255108</item>
    </integer-array>
    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>2.543</item>
        <item>3.266</item>
        <item>4.8394</item>
        <item>15.2619</item>
        <item>33</item>
        <item>49</item>
        <item>62.95</item>
        <item>76.46</item>
        <item>84.38</item>
        <item>89.51</item>
        <item>100.34</item>
        <item>109.48</item>
        <item>115</item>
        <item>123.86</item>
        <item>129.18</item>
        <item>138.07</item>
        <item>148.62</item>
        <item>175.84</item>
        <item>234.9</item>
        <item>279</item>
        <item>300</item>
        <item>320</item>
        <item>340</item>
        <item>360</item>
        <item>380</item>
        <item>400</item>
        <item>420</item>
        <item>440</item>
        <item>460</item>
        <item>480</item>
        <item>500</item>
        <item>520</item>
        <item>540</item>
        <item>560</item>
        <item>580</item>
        <item>600</item>
        <item>620</item>
        <item>660</item>
        <item>700</item>
        <item>740</item>
        <item>780</item>
        <item>820</item>
        <item>860</item>
        <item>900</item>
        <item>940</item>
        <item>960</item>
        <item>1000</item>
    </array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>3.266</item>
        <item>4.0824</item>
        <item>5.0958</item>
        <item>13.278</item>
        <item>20.367</item>
        <item>27.261</item>
        <item>34.184</item>
        <item>40.837</item>
        <item>47.769</item>
        <item>54.644</item>
        <item>61.339</item>
        <item>67.938</item>
        <item>74.541</item>
        <item>81.414</item>
        <item>88.732</item>
        <item>96.032</item>
        <item>102.51</item>
        <item>109.15</item>
        <item>114.68</item>
        <item>120.28</item>
        <item>125.99</item>
        <item>131.44</item>
        <item>139.0</item>
        <item>146.22</item>
        <item>152.9</item>
        <item>159.3</item>
        <item>165.83</item>
        <item>172.18</item>
        <item>178.68</item>
        <item>185.02</item>
        <item>191.39</item>
        <item>198.11</item>
        <item>202.98</item>
        <item>209.57</item>
        <item>216.25</item>
        <item>222.9</item>
        <item>229.17</item>
        <item>235.92</item>
        <item>242.47</item>
        <item>249.17</item>
        <item>256.38</item>
        <item>262.77</item>
        <item>269.41</item>
        <item>275.53</item>
        <item>281.98</item>
        <item>289.51</item>
        <item>296.8</item>
        <item>303.7</item>
        <item>310.4</item>
        <item>316.85</item>
        <item>323.15</item>
        <item>330.24</item>
        <item>336.19</item>
        <item>342.41</item>
        <item>348.93</item>
        <item>356.62</item>
        <item>369.64</item>
        <item>401.78</item>
        <item>414.49</item>
        <item>416.19</item>
        <item>417.54</item>
        <item>419.16</item>
        <item>421.13</item>
        <item>422.43</item>
        <item>424.65</item>
        <item>427.63</item>
    </array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.
         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>8</item>
        <item>12</item>
        <item>16</item>
        <item>20</item>
        <item>24</item>
        <item>28</item>
        <item>32</item>
        <item>36</item>
        <item>40</item>
        <item>44</item>
        <item>48</item>
        <item>52</item>
        <item>56</item>
        <item>60</item>
        <item>64</item>
        <item>68</item>
        <item>72</item>
        <item>76</item>
        <item>80</item>
        <item>84</item>
        <item>88</item>
        <item>92</item>
        <item>96</item>
        <item>100</item>
        <item>104</item>
        <item>108</item>
        <item>112</item>
        <item>116</item>
        <item>120</item>
        <item>123</item>
        <item>127</item>
        <item>131</item>
        <item>135</item>
        <item>139</item>
        <item>143</item>
        <item>147</item>
        <item>151</item>
        <item>155</item>
        <item>159</item>
        <item>163</item>
        <item>167</item>
        <item>171</item>
        <item>175</item>
        <item>179</item>
        <item>183</item>
        <item>187</item>
        <item>191</item>
        <item>195</item>
        <item>199</item>
        <item>203</item>
        <item>207</item>
        <item>211</item>
        <item>215</item>
        <item>219</item>
        <item>223</item>
        <item>227</item>
        <item>231</item>
        <item>235</item>
        <item>239</item>
        <item>243</item>
        <item>246</item>
        <item>251</item>
        <item>255</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_ambientBrighteningThresholds, and the new darkening
         hysteresis constraint value is the n-th element of config_ambientDarkeningThresholds.
         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                       calculated index
         value < level[0]                0
         level[n] <= value < level[n+1]  n+1
         level[MAX] <= value             MAX+1 -->
    <integer-array name="config_ambientThresholdLevels">
        <item>10</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientBrighteningThresholds">
        <item>600</item>
        <item>300</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientDarkeningThresholds">
        <item>600</item>
        <item>300</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_screenThresholdLevels. The darkening threshold is calculated as
         screenBrightness * (1.0f - CONSTRAINT_VALUE). When the new screen brightness is lower than
         this threshold, it is applied. See the config_screenThresholdLevels description for how
         the constraint value is chosen. -->
    <integer-array name="config_screenDarkeningThresholds">
        <item>0</item>
    </integer-array>

    <!-- User activity timeout: Maximum screen dim duration as a percentage of screen off timeout.
         This resource is similar to config_maximumScreenDimDuration but the maximum
         screen dim duration is defined as a ratio of the overall screen off timeout
         instead of as an absolute value in milliseconds.  This is useful for reducing
         the dim duration when the screen off timeout is very short.
         When computing the screen dim duration, the power manager uses the lesser
         of the effective durations expressed by config_maximumScreenDimDuration and
         config_maximumScreenDimRatio.
         This value must be between 0% and 100%.  If the value is zero, the screen will not
         dim before the device goes to sleep.
    -->
    <fraction name="config_maximumScreenDimRatio">25%</fraction>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>

    <!-- Maximum screen brightness allowed by the power manager.
         -2 is invalid so setting will resort to int value specified above.
         Set this to 1.0 for maximum brightness range.
         The user is forbidden from setting the brightness above this level. -->
    <item name="config_screenBrightnessSettingMaximumFloat" format="float" type="dimen">1.0</item>

    <!-- Default screen brightness setting set.
         -2 is invalid so setting will resort to int value specified above.
         Must be in the range specified by minimum and maximum. -->
    <item name="config_screenBrightnessSettingDefaultFloat" format="float" type="dimen">0.19550341</item>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">5000</integer>

    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- Display has physical cutout -->
    <bool name="config_physicalDisplayCutout">true</bool>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display.
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
         -->
    <string translatable="false" name="config_mainBuiltInDisplayCutout">M15,1 C74.5,1.3 153.1,1.4 250.8,1.5 C230.6,1.5 200.8,1.5 180.9,1.5 C180.3,1.5 165.5,1.5 150.6,1.6 C150.7,1.6 140.6,1.7 132.4,1.7 C124.2,1.7 117.9,2.3 110.6,3.1 C107.2,3.3 102.8,4 98.7,5.1 C94.6,6 90.7,7.1 85.8,9 C80.9,10.9 75,13.5 69.2,17.7 C63.4,21.9 57.6,27.6 52.4,33.5 C47.1,39.4 42.4,45.6 38,50.3 C28.1,61 15.3,67.7 0.5,67.9 C0.3,67.9 0.1,67.9 -0.1,67.9 C-0.1,67.9 -0.2,67.9 -0.2,67.9 C-0.2,67.9 -0.3,67.9 -0.3,67.9 C-0.5,67.9 -0.6,67.9 -0.7,67.9 C-15.6,67.8 -28.4,61.1 -38.4,50.3 C-42.8,45.5 -47.6,39.4 -52.8,33.5 C-58,27.6 -63.8,21.9 -69.6,17.7 C-75.4,13.5 -81.3,10.9 -86.2,9 C-91.1,7.1 -95,6 -99.1,5.1 C-103.3,4.2 -107.7,3.5 -113,3 C-113,2.7 -140.6,1.8 -151,1.7 L-350,1.7 M-430,0 L430,0 L430,1 L0,1 L-430,1.1 L-430,0</string>

    <string translatable="false" name="config_mainBuiltInDisplayCutoutRectApproximation">
        M -85,0
        V 67.9
        H 85
        V 0
        Z
    </string>

    <!-- Whether the display cutout region of the main built-in display should be forced to
         black in software (to avoid aliasing or emulate a cutout that is not physically existent).
         -->
    <bool name="config_fillMainBuiltInDisplayCutout">true</bool>

    <!-- Height of the status bar -->
    <dimen name="status_bar_height_portrait">28dp</dimen>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <bool name="config_showNavigationBar">true</bool>

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1,-1,true"</item>
        <item>"mobile,0,0,0,-1,true"</item>
        <item>"mobile_mms,2,0,4,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_dun,4,0,2,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"mobile_fota,10,0,2,60000,true"</item>
        <item>"mobile_ims,11,0,2,60000,true"</item>
        <item>"mobile_cbs,12,0,2,60000,true"</item>
        <item>"mobile_ia,14,0,2,-1,true"</item>
        <item>"bluetooth,7,7,2,-1,true"</item>
        <item>"ethernet,9,9,9,-1,true"</item>
        <item>"mobile_emergency,15,0,5,-1,true</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"7,1"</item>
        <item>"9,1"</item>
    </string-array>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.
         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.
         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
    <bool name="config_wifiDisplaySupportsProtectedBuffers">true</bool>

    <!-- Configure mobile tcp buffer sizes in the form:
         rat-name:rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max
         If no value is found for the rat-name in use, the system default will be applied.
    -->
    <string-array name="config_mobile_tcp_buffers">
        <item>5gnr:2097152,6291456,16777216,512000,2097152,8388608</item>
        <item>lte:2097152,4194304,8388608,262144,524288,1048576</item>
        <item>lte_ca:4096,6291456,12582912,4096,1048576,2097152</item>
        <item>umts:4094,87380,1220608,4096,16384,1220608</item>
        <item>hspa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hsupa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hsdpa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hspap:4094,87380,1220608,4096,16384,1220608</item>
        <item>edge:4093,26280,35040,4096,16384,35040</item>
        <item>gprs:4092,8760,11680,4096,8760,11680</item>
        <item>evdo:4094,87380,524288,4096,16384,262144</item>
    </string-array>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>
    <bool name="config_switch_phone_on_voice_reg_state_change">true</bool>
    <bool name="config_swipe_up_gesture_setting_available">true</bool>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.
         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- If true, the doze component is not started until after the screen has been turned off
         and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOffByDefault">false</bool>
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Delay that allows some content to arrive at the display before switching
         from DOZE to ON, in millis. -->
    <integer name="config_wakeUpDelayDoze">95</integer>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">30</integer>

    <!-- Whether the display blanks itself when transitioning from a doze to a non-doze state -->
    <bool name="config_displayBlanksAfterDoze">false</bool>
    
    <!-- Screen off delay --> 
    <integer name="config_screen_off_delay">0</integer>

    <!-- Try-again polling interval in milliseconds, in case the network request failed -->
    <integer name="config_ntpPollingIntervalShorter">6000</integer>
    <bool name="config_requireCallCapableAccountForHandle">true</bool>
    <integer name="config_ntpRetry">20</integer>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.

         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.

         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.

         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.

         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to power.h for details.
    -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>
    <integer name="config_maximumScreenDimDuration">18000</integer>

    <!-- Values for GPS configuration -->
    <string-array translatable="false" name="config_gpsParameters">
        <item>SUPL_HOST=supl.google.com</item>
        <item>SUPL_PORT=7275</item>
        <item>SUPL_VER=0x20000</item>
        <item>SUPL_MODE=1</item>
        <item>SUPL_ES=1</item>
        <item>LPP_PROFILE=0</item>
        <item>USE_EMERGENCY_PDN_FOR_EMERGENCY_SUPL=1</item>
        <item>A_GLONASS_POS_PROTOCOL_SELECT=0</item>
        <item>GPS_LOCK=0</item>
    </string-array>
    
    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_volte_available">true</bool>

    <!-- Flag specifying whether VT is available on device -->
    <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether WFC over IMS is available on device -->
    <bool name="config_device_wfc_ims_available">true</bool>

    <!-- Flag specifying whether WFC over IMS should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_wfc_ims_available">true</bool>

    <!-- IWLAN data service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_data_service_package">vendor.qti.iwlan</string>

    <!-- IWLAN network service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_network_service_package">vendor.qti.iwlan</string>

    <!-- Telephony qualified networks service package name to bind to by default. -->
    <string name="config_qualified_networks_service_package">vendor.qti.iwlan</string>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>10</item>
        <item>5</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>10</item>
        <item>5</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>10</item>
    </integer-array>

    <!-- Array of allowable ConnectivityManager network types for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
         [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>1</item>
        <item>7</item>
        <item>0</item>
        <item>5</item>
    </integer-array>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->

    <!-- Is the device capable of hot swapping an ICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
    <integer name="config_num_physical_slots">2</integer>

    <!-- If true, the screen can be rotated via the accelerometer in all 4
         rotations as the default behavior. -->
    <bool name="config_allowAllRotations">true</bool>

    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
    <bool name="config_speed_up_audio_on_mt_calls">false</bool>

    <!-- Whether the Unprocessed audio source supports the required frequency range and level -->
    <bool name="config_supportAudioSourceUnprocessed">true</bool>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
    <integer name="config_shutdownBatteryTemperature">600</integer>

    <!-- Max number of scan filters supported by blutooth controller. 0 if the
         device does not support hardware scan filters-->
    <integer translatable="false" name="config_bluetooth_max_scan_filters">1</integer>

    <!-- Max number of advertisers supported by bluetooth controller. 0 if the
         device does not support multiple advertisement-->
    <integer translatable="false" name="config_bluetooth_max_advertisers">4</integer>

    <!-- Operating volatage for bluetooth controller. 0 by default-->
    <integer name="config_bluetooth_operating_voltage_mv">3300</integer>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
        <item>"/system_ext/priv-app/SystemUIGoogle/SystemUIGoogle.apk"</item>
        <item>"/system_ext/priv-app/SystemUIGoogle/oat/arm64/SystemUIGoogle.odex"</item>
        <item>"/system/bin/surfaceflinger"</item>
    </string-array>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- True if the device supports Sustained Performance Mode-->
    <bool name="config_sustainedPerformanceModeSupported">true</bool>

    <!-- List of files pinned by the Pinner Service with the JIT Zygote boot image b/119800099 -->
    <string-array translatable="false" name="config_jitzygoteBootImagePinnerServiceFiles">
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
        <item>"/system_ext/priv-app/SystemUIGoogle/SystemUIGoogle.apk"</item>
        <item>"/system_ext/priv-app/DaxUI/DaxUI.apk"</item>
        <item>"/system_ext/priv-app/daxService/daxService.apk"</item>
        <item>"/system/bin/surfaceflinger"</item>
    </string-array>

    <!-- Flag indicating whether the surface flinger has limited
         alpha compositing functionality in hardware. If set, the window
         manager will disable alpha trasformation in animations where not
         strictly needed. -->
    <bool name="config_sf_limitedAlpha">true</bool>

    <!-- Flag indicating whether the surface flinger is inefficient
         at performing a blur.  Used by parts of the UI to turn off
         the blur effect where it isn't worth the performance hit.
         As of Honeycomb, blurring is not supported anymore. -->
    <bool name="config_sf_slowBlur">false</bool>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>
    <bool name="config_cleanupUnusedFingerprints">false</bool>

    <!-- Whether device has screen with higher aspect ratio -->
    <bool name="config_haveHigherAspectRatioScreen">true</bool>

    <!-- Default value for proximity check on screen wake
     NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
    <bool name="config_proximityCheckOnWake">true</bool>
    <integer name="config_proximityCheckTimeout">100</integer>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">true</bool>

    <!-- The default journal mode to use use when Write-Ahead Logging is not active.
         Choices are: OFF, DELETE, TRUNCATE, PERSIST and MEMORY.
         PERSIST may improve performance by reducing how often journal blocks are
         reallocated (compared to truncation) resulting in better data block locality
         and less churn of the storage media.
         The PERSIST mode results in data persisting in the journal beyond the life of
         a transaction, so it interacts poorly with SECURE_DELETE. -->
    <string name="db_default_journal_mode">MEMORY</string>

    <!-- The database synchronization mode when using the default journal mode.
         FULL is safest and preserves durability at the cost of extra fsyncs.
         NORMAL also preserves durability in non-WAL modes and uses checksums to ensure
         integrity although there is a small chance that an error might go unnoticed.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_default_sync_mode">OFF</string>

    <!-- List supported color modes. -->
    <integer-array name="config_availableColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL -->
        <item>1</item> <!-- COLOR_MODE_BOOSTED -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>

    <!-- Color mode to use when accessibility transforms are enabled. This color mode must be
     supported by the device, but not necessarily appear in config_availableColorModes. The
     regularly selected color mode will be used if this value is negative. -->
    <integer name="config_accessibilityColorMode">2</integer>

    <!-- The following two arrays specify which color space to use for display composition when a
         certain color mode is active.
         Composition color spaces are defined in android.view.Display.COLOR_MODE_xxx, and color
         modes are defined in ColorDisplayManager.COLOR_MODE_xxx and
         ColorDisplayManager.VENDOR_COLOR_MODE_xxx.
         The color space COLOR_MODE_DEFAULT (0) lets the system select the most appropriate
         composition color space for currently displayed content. Other values (e.g.,
         COLOR_MODE_SRGB) override system selection; these other color spaces must be supported by
         the device for for display composition.
         If a color mode does not have a corresponding color space specified in this array, the
         currently set composition color space will not be modified.-->
    <integer-array name="config_displayCompositionColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL   -->
        <item>1</item> <!-- COLOR_MODE_BOOSTED   -->
        <item>2</item> <!-- COLOR_MODE_SATURATED -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>
    <integer-array name="config_displayCompositionColorSpaces">
        <item>0</item> <!-- COLOR_MODE_DEFAULT    -->
        <item>0</item> <!-- COLOR_MODE_DEFAULT    -->
        <item>0</item> <!-- COLOR_MODE_DEFAULT    -->
        <item>9</item> <!-- COLOR_MODE_DISPLAY_P3 -->
    </integer-array>

    <!-- If true, the display will be shifted around in ambient mode. -->
    <bool name="config_enableBurnInProtection">true</bool>

    <!-- Specifies the maximum burn-in offset displacement from the center.
         If -1, no maximum value will be used. -->
    <integer name="config_burnInProtectionMaxRadius">-1</integer>

    <!-- Specifies the minimum burn-in offset horizontally. -->
    <integer name="config_burnInProtectionMinHorizontalOffset">-15</integer>

    <!-- Specifies the maximum burn-in offset horizontally. -->
    <integer name="config_burnInProtectionMaxHorizontalOffset">15</integer>

    <!-- Specifies the minimum burn-in offset vertically. -->
    <integer name="config_burnInProtectionMinVerticalOffset">-40</integer>

    <!-- Specifies the maximum burn-in offset vertically. -->
    <integer name="config_burnInProtectionMaxVerticalOffset">40</integer>

    <!-- Whether notify fingerprint client of successful cancelled authentication -->
    <bool name="config_notifyClientOnFingerprintCancelSuccess">true</bool>

    <!-- Whether UI for multi user should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <!-- The database synchronization mode when using Write-Ahead Logging.
         From https://www.sqlite.org/pragma.html#pragma_synchronous:
         WAL mode is safe from corruption with synchronous=NORMAL, and probably DELETE mode is safe
         too on modern filesystems. WAL mode is always consistent with synchronous=NORMAL, but WAL
         mode does lose durability. A transaction committed in WAL mode with
         synchronous=NORMAL might roll back following a power loss or system crash.
         Transactions are durable across application crashes regardless of the synchronous setting
         or journal mode. The synchronous=NORMAL setting is a good choice for most applications
         running in WAL mode.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_wal_sync_mode">OFF</string>

    <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
         when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
         where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
         and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors" translatable="false" >
        <item>0:2:15</item> <!-- ID0:Fingerprint:Strong -->
    </string-array>

        <!-- The component name, flattened to a string, for the default autofill service
         to  enabled for an user. This service must be trusted, as it can be activated
         without explicit consent of the user. If no autofill service with the
         specified name exists on the device, autofill will be disabled by default. -->
    <string name="config_defaultAutofillService" translatable="false">com.google.android.gms/.autofill.service.AutofillService</string>

    <!-- The list of components which should be automatically disabled for a specific package. -->
    <string-array name="config_disabledComponents" translatable="false">
	<item>com.google.android.googlequicksearchbox/com.google.android.hotword.service.HotwordService</item>
    </string-array>

    <!-- SystemInfo Sys Nodes -->
    <string name="config_sysCPUTemp">/sys/class/thermal/thermal_zone3/temp</string>
    <string name="config_sysBatteryTemp">/sys/class/power_supply/battery/temp</string>
    <string name="config_sysGPUFreq">/sys/kernel/gpu/gpu_clock</string>
    <string name="config_sysGPULoad">/sys/kernel/gpu/gpu_busy</string>
    <integer name="config_sysCPUTempMultiplier">10</integer>
    <integer name="config_sysBatteryTempMultiplier">10</integer>

    <!-- Whether or not we should show vendor mismatch message -->
    <bool name="config_show_vendor_mismatch_message">false</bool>

    <!-- Wired/BT headset focus mode -->
    <bool name="config_deviceRingtoneFocusMode">true</bool>

    <!-- The list of components which should be automatically disabled for a specific device. -->
    <string-array name="config_deviceDisabledComponents" translatable="false">
        <item>com.google.android.gms/com.google.android.gms.nearby.messages.service.NearbyMessagesService</item>
        <item>com.google.android.gms/com.google.android.gms.nearby.discovery.service.DiscoveryService</item>
    </string-array>

    <!-- Whether device has a notch -->
    <bool name="config_haveNotch">true</bool>

    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_supportSmartPixels">true</bool>

    <!-- The device supports freeform window management. Windows have title bars and can be moved
         and resized. If you set this to true, you also need to add
         PackageManager.FEATURE_FREEFORM_WINDOW_MANAGEMENT feature to your device specification.
         The duplication is necessary, because this information is used before the features are
         available to the system.-->
    <bool name="config_freeformWindowManagement">true</bool>

    <!-- Amount of time it takes for the light sensor to warm up in milliseconds.
         For this time after the screen turns on, the Power Manager
         will not debounce light sensor readings -->
    <integer name="config_lightSensorWarmupTime">200</integer>

    <!-- Flag indicating whether we should enable the adaptive sleep.-->
    <bool name="config_adaptive_sleep_available">true</bool>

    <!-- Enable Zram writeback feature to allow unused pages in zram be written to flash. -->
    <bool name="config_zramWriteback">true</bool>

    <!-- The max scale for the wallpaper when it's zoomed in -->
    <item name="config_wallpaperMaxScale" format="float" type="dimen">1.00</item>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">false</bool>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">false</bool>

    <!-- Does the battery LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">false</bool>

    <!-- Does the device have a notification led -->
    <bool name="config_hasNotificationLed">false</bool>

    <!-- Do the battery/notification LEDs support pulsing?
         Used to decide if we show pulse settings -->
    <bool name="config_ledCanPulse">false</bool>

    <!-- If not zero, limits the internal screen recorder's framerate to the set value. -->
    <integer name="config_screenRecorderMaxFramerate">60</integer>

    <!-- The list of package IDs that are allowed to use aux cameras.
         NOTE: If this list is empty then all apps will be able to use aux cameras. -->
    <string-array name="config_cameraAuxPackageAllowList" translatable="false">
        <item>com.oppo.camera</item>
        <item>org.codeaurora.snapcam</item>
        <item>com.android.camera</item>
        <item>org.lineageos.aperture</item>
        <item>org.lineageos.aperture.dev</item>
    </string-array>

    <!-- The list of package IDs that are not allowed to use aux cameras. -->
    <string-array name="config_cameraAuxPackageExcludeList" translatable="false">
        <item>org.telegram.messenger</item>
        <item>org.thunderdog.challegram</item>
        <item>tw.nekomimi.nekogram</item>
        <item>org.telegram.plus</item>
        <item>it.owlgram.android</item>
        <item>us.zoom.videomeetings</item>
    </string-array>

    <!-- Enables or disables haptic effect when the text insertion/selection handle is moved
         manually by the user. Off by default, since the expected haptic feedback may not be
         available on some devices. -->
    <bool name="config_enableHapticTextHandle">true</bool>

    <!-- the number of the max cached processes in the system. -->
    <integer name="config_customizedMaxCachedProcesses">64</integer>

    <!-- The properties of a UDFPS sensor in pixels, in the order listed below: -->
    <integer-array name="config_udfps_sensor_props" translatable="false" >
        <item>540</item>  <!-- <item>sensorLocationX</item> -->
        <item>2156</item> <!-- <item>sensorLocationY</item> -->
        <item>95</item>   <!-- <item>sensorRadius</item> -->
    </integer-array>

    <!-- How long it takes for the HW to start illuminating after the illumination is requested. -->
    <integer name="config_udfps_illumination_transition_ms">0</integer>

    <!-- Whether devices suports in-display fingerprint when screen is off -->
    <bool name="config_supportsScreenOffUdfps">true</bool>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath" translatable="false">/sys/class/power_supply/battery/voocchg_ing</string>
</resources>
